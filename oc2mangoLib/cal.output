Terminals which are not used

   ENDIF
   IFDEF
   IFNDEF
   UNDEF
   _enum
   _struct
   CLASS_DECLARE
   RIP
   _YES
   _NO
   _SEL


State 22 conflicts: 3 shift/reduce, 1 reduce/reduce
State 66 conflicts: 1 shift/reduce
State 67 conflicts: 2 shift/reduce
State 70 conflicts: 1 shift/reduce
State 75 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 90 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 108 conflicts: 2 shift/reduce, 1 reduce/reduce
State 116 conflicts: 1 shift/reduce
State 117 conflicts: 20 shift/reduce
State 148 conflicts: 27 shift/reduce
State 151 conflicts: 27 shift/reduce
State 156 conflicts: 1 shift/reduce
State 257 conflicts: 1 shift/reduce
State 258 conflicts: 1 shift/reduce
State 261 conflicts: 3 shift/reduce
State 263 conflicts: 20 shift/reduce
State 264 conflicts: 20 shift/reduce
State 290 conflicts: 1 shift/reduce
State 325 conflicts: 20 shift/reduce
State 341 conflicts: 3 shift/reduce
State 343 conflicts: 1 shift/reduce
State 376 conflicts: 20 shift/reduce


Grammar

    0 $accept: compile_util $end

    1 compile_util: /* empty */
    2             | definition_list

    3 definition_list: definition
    4                | definition_list definition

    5 definition: PS_Define
    6           | class_declare
    7           | class_implementation
    8           | expression
    9           | control_statement

   10 PS_Define: PS includeHeader

   11 includeHeader: IMPORT
   12              | INCLUDE
   13              | includeHeader LT IDENTIFIER DIV IDENTIFIER DOT IDENTIFIER GT
   14              | includeHeader STRING_LITERAL

   15 class_declare: INTERFACE IDENTIFIER COLON IDENTIFIER
   16              | INTERFACE IDENTIFIER LP IDENTIFIER RP
   17              | INTERFACE IDENTIFIER LP RP
   18              | class_declare LT protocol_list GT
   19              | class_declare class_private_varibale_declare
   20              | class_declare PROPERTY class_property_declare value_declare SEMICOLON
   21              | class_declare method_declare SEMICOLON
   22              | class_declare END

   23 class_implementation: IMPLEMENTATION IDENTIFIER
   24                     | IMPLEMENTATION IDENTIFIER LP IDENTIFIER RP
   25                     | class_implementation class_private_varibale_declare
   26                     | class_implementation method_declare LC function_implementation RC
   27                     | class_implementation END

   28 protocol_list: IDENTIFIER
   29              | protocol_list COMMA IDENTIFIER

   30 class_private_varibale_declare: LC
   31                               | class_private_varibale_declare value_declare SEMICOLON
   32                               | class_private_varibale_declare RC

   33 class_property_type: ASSIGN_MEM
   34                    | WEAK
   35                    | STRONG
   36                    | COPY
   37                    | NONATOMIC
   38                    | ATOMIC
   39                    | READONLY
   40                    | READWRITE
   41                    | NONNULL
   42                    | NULLABLE

   43 class_property_declare: /* empty */
   44                       | LP
   45                       | class_property_declare class_property_type COMMA
   46                       | class_property_declare class_property_type RP

   47 value_declare: value_declare_type IDENTIFIER
   48              | block_declare

   49 declare_type: /* empty */
   50             | LT value_declare_type GT declare_type
   51             | ASTERISK
   52             | declare_type declare_right_attribute

   53 value_declare_type: declare_left_attribute value_declare_type
   54                   | _typeof LP value_expression RP
   55                   | _UCHAR declare_type
   56                   | _USHORT declare_type
   57                   | _UINT declare_type
   58                   | _ULONG declare_type
   59                   | _ULLONG declare_type
   60                   | _CHAR declare_type
   61                   | _SHORT declare_type
   62                   | _INT declare_type
   63                   | _LONG declare_type
   64                   | _LLONG declare_type
   65                   | _DOUBLE declare_type
   66                   | _FLOAT declare_type
   67                   | _Class declare_type
   68                   | _BOOL declare_type
   69                   | _void declare_type
   70                   | _instancetype
   71                   | IDENTIFIER declare_type
   72                   | _id declare_type
   73                   | block_type

   74 declare_left_attribute: EXTERN
   75                       | STATIC
   76                       | CONST
   77                       | NONNULL
   78                       | NULLABLE
   79                       | _STRONG
   80                       | _WEAK
   81                       | _BLOCK

   82 declare_right_attribute: _NONNULL
   83                        | _NULLABLE
   84                        | CONST

   85 block_declare: value_declare_type LP POWER IDENTIFIER RP
   86              | block_declare LP func_declare_parameters RP

   87 block_type: value_declare_type LP POWER RP
   88           | block_type LP func_declare_parameters RP

   89 block_parametere_type: value_declare
   90                      | value_declare_type

   91 func_declare_parameters: /* empty */
   92                        | block_parametere_type
   93                        | func_declare_parameters COMMA block_parametere_type

   94 method_declare: SUB LP value_declare_type RP
   95               | ADD LP value_declare_type RP
   96               | method_declare IDENTIFIER
   97               | method_declare IDENTIFIER COLON LP value_declare_type RP IDENTIFIER

   98 value_expression_list: /* empty */
   99                      | value_expression
  100                      | value_expression_list COMMA value_expression

  101 value_get_operator: DOT
  102                   | SUB GT

  103 objc_method_get: object_value_type value_get_operator IDENTIFIER
  104                | object_value_type value_get_operator IDENTIFIER LP value_expression_list RP
  105                | objc_method_get value_get_operator IDENTIFIER
  106                | objc_method_get value_get_operator IDENTIFIER LP value_expression_list RP

  107 method_caller_type: object_value_type
  108                   | objc_method_get

  109 objc_method_call_pramameters: IDENTIFIER
  110                             | IDENTIFIER COLON value_expression_list
  111                             | objc_method_call_pramameters IDENTIFIER COLON value_expression_list

  112 objc_method_call: objc_method_get
  113                 | LB method_caller_type objc_method_call_pramameters RB

  114 block_implementation: POWER value_declare_type LC function_implementation RC
  115                     | POWER value_declare_type LP func_declare_parameters RP LC function_implementation RC
  116                     | POWER LC function_implementation RC
  117                     | POWER LP func_declare_parameters RP LC function_implementation RC

  118 object_value_type: IDENTIFIER
  119                  | _self
  120                  | _super
  121                  | AT LP value_expression RP
  122                  | AT numerical_value_type
  123                  | AT STRING_LITERAL
  124                  | objc_method_call
  125                  | IDENTIFIER LP value_expression_list RP

  126 numerical_value_type: INTETER_LITERAL
  127                     | DOUBLE_LITERAL

  128 primary_expression: object_value_type
  129                   | SELECTOR
  130                   | PROTOCOL LP IDENTIFIER RP
  131                   | STRING_LITERAL
  132                   | block_implementation
  133                   | numerical_value_type
  134                   | LP value_declare_type RP primary_expression
  135                   | _nil
  136                   | _NULL
  137                   | ASTERISK IDENTIFIER
  138                   | AND IDENTIFIER

  139 assign_operator: ASSIGN
  140                | AND_ASSIGN
  141                | OR_ASSIGN
  142                | POWER_ASSIGN
  143                | ADD_ASSIGN
  144                | SUB_ASSIGN
  145                | DIV_ASSIGN
  146                | ASTERISK_ASSIGN
  147                | MOD_ASSIGN

  148 unary_operator: INCREMENT
  149               | DECREMENT

  150 binary_operator: ADD
  151                | SUB
  152                | ASTERISK
  153                | DIV
  154                | MOD
  155                | SHIFTLEFT
  156                | SHIFTRIGHT
  157                | AND
  158                | OR
  159                | POWER

  160 ternary_expression: judgement_expression QUESTION ternary_expression value_expression COLON value_expression
  161                   | judgement_expression QUESTION COLON value_expression

  162 calculator_expression: value_expression binary_operator value_expression
  163                      | value_expression unary_operator
  164                      | ternary_expression

  165 judgement_operator: EQ
  166                   | NE
  167                   | LE
  168                   | LT
  169                   | GE
  170                   | GT
  171                   | LOGIC_AND
  172                   | LOGIC_OR

  173 judgement_expression: LOGIC_NOT value_expression
  174                     | value_expression judgement_operator value_expression

  175 value_expression: primary_expression
  176                 | judgement_expression
  177                 | calculator_expression
  178                 | LP value_expression RP

  179 control_expression: _return
  180                   | _return value_expression
  181                   | _break
  182                   | _continue
  183                   | _goto IDENTIFIER COLON

  184 assign_expression: declare_assign_expression
  185                  | var_assign_expression

  186 declare_assign_expression: value_declare
  187                          | value_declare ASSIGN value_expression

  188 var_assign_expression: primary_expression assign_operator value_expression

  189 expression: value_expression SEMICOLON
  190           | assign_expression SEMICOLON
  191           | control_expression SEMICOLON

  192 if_statement: IF LP value_expression RP LC function_implementation RC
  193             | if_statement _else IF LP value_expression RP LC function_implementation RC
  194             | if_statement _else LC function_implementation RC

  195 dowhile_statement: _do LC function_implementation RC _while LP value_expression RP

  196 while_statement: _while LP value_expression RP LC function_implementation RC

  197 case_statement: _case primary_expression COLON
  198               | _default COLON
  199               | case_statement LC function_implementation RC

  200 switch_statement: _switch LP primary_expression RP LC
  201                 | switch_statement case_statement
  202                 | switch_statement RC

  203 for_parameter_list: expression
  204                   | for_parameter_list SEMICOLON expression

  205 for_statement: _for LP for_parameter_list RP LC function_implementation RC

  206 forin_statement: _for LP value_declare _in primary_expression RP LC function_implementation RC

  207 control_statement: if_statement
  208                  | switch_statement
  209                  | while_statement
  210                  | dowhile_statement
  211                  | for_statement
  212                  | forin_statement

  213 function_implementation: /* empty */
  214                        | function_implementation expression
  215                        | function_implementation control_statement


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 192 193
ENDIF (259)
IFDEF (260)
IFNDEF (261)
UNDEF (262)
IMPORT (263) 11
INCLUDE (264) 12
QUESTION (265) 160 161
_return (266) 179 180
_break (267) 181
_continue (268) 182
_goto (269) 183
_else (270) 193 194
_while (271) 195 196
_do (272) 195
_in (273) 206
_for (274) 205 206
_case (275) 197
_switch (276) 200
_default (277) 198
_enum (278)
_typeof (279) 54
_struct (280)
INTERFACE (281) 15 16 17
IMPLEMENTATION (282) 23 24
PROTOCOL (283) 130
END (284) 22 27
CLASS_DECLARE (285)
PROPERTY (286) 20
WEAK (287) 34
STRONG (288) 35
COPY (289) 36
ASSIGN_MEM (290) 33
NONATOMIC (291) 37
ATOMIC (292) 38
READONLY (293) 39
READWRITE (294) 40
NONNULL (295) 41 77
NULLABLE (296) 42 78
EXTERN (297) 74
STATIC (298) 75
CONST (299) 76 84
_NONNULL (300) 82
_NULLABLE (301) 83
_STRONG (302) 79
_WEAK (303) 80
_BLOCK (304) 81
IDENTIFIER (305) 13 15 16 17 23 24 28 29 47 71 85 96 97 103 104 105
    106 109 110 111 118 125 130 137 138 183
STRING_LITERAL (306) 14 123 131
COMMA (307) 29 45 93 100
COLON (308) 15 97 110 111 160 161 183 197 198
SEMICOLON (309) 20 21 31 189 190 191 204
LP (310) 16 17 24 44 54 85 86 87 88 94 95 97 104 106 115 117 121 125
    130 134 178 192 193 195 196 200 205 206
RP (311) 16 17 24 46 54 85 86 87 88 94 95 97 104 106 115 117 121 125
    130 134 178 192 193 195 196 200 205 206
RIP (312)
LB (313) 113
RB (314) 113
LC (315) 26 30 114 115 116 117 192 193 194 195 196 199 200 205 206
RC (316) 26 32 114 115 116 117 192 193 194 195 196 199 202 205 206
DOT (317) 13 101
AT (318) 121 122 123
PS (319) 10
EQ (320) 165
NE (321) 166
LT (322) 13 18 50 168
LE (323) 167
GT (324) 13 18 50 102 170
GE (325) 169
LOGIC_AND (326) 171
LOGIC_OR (327) 172
LOGIC_NOT (328) 173
AND (329) 138 157
OR (330) 158
POWER (331) 85 87 114 115 116 117 159
SUB (332) 94 102 151
ADD (333) 95 150
DIV (334) 13 153
ASTERISK (335) 51 137 152
AND_ASSIGN (336) 140
OR_ASSIGN (337) 141
POWER_ASSIGN (338) 142
SUB_ASSIGN (339) 144
ADD_ASSIGN (340) 143
DIV_ASSIGN (341) 145
ASTERISK_ASSIGN (342) 146
INCREMENT (343) 148
DECREMENT (344) 149
SHIFTLEFT (345) 155
SHIFTRIGHT (346) 156
MOD (347) 154
ASSIGN (348) 139 187
MOD_ASSIGN (349) 147
_self (350) 119
_super (351) 120
_nil (352) 135
_NULL (353) 136
_YES (354)
_NO (355)
_Class (356) 67
_id (357) 72
_void (358) 69
_BOOL (359) 68
_SEL (360)
_CHAR (361) 60
_SHORT (362) 61
_INT (363) 62
_LONG (364) 63
_LLONG (365) 64
_UCHAR (366) 55
_USHORT (367) 56
_UINT (368) 57
_ULONG (369) 58
_ULLONG (370) 59
_DOUBLE (371) 65
_FLOAT (372) 66
_instancetype (373) 70
INTETER_LITERAL (374) 126
DOUBLE_LITERAL (375) 127
SELECTOR (376) 129


Nonterminals, with rules where they appear

$accept (122)
    on left: 0
compile_util (123)
    on left: 1 2, on right: 0
definition_list (124)
    on left: 3 4, on right: 2 4
definition (125)
    on left: 5 6 7 8 9, on right: 3 4
PS_Define (126)
    on left: 10, on right: 5
includeHeader (127)
    on left: 11 12 13 14, on right: 10 13 14
class_declare (128)
    on left: 15 16 17 18 19 20 21 22, on right: 6 18 19 20 21 22
class_implementation (129)
    on left: 23 24 25 26 27, on right: 7 25 26 27
protocol_list (130)
    on left: 28 29, on right: 18 29
class_private_varibale_declare (131)
    on left: 30 31 32, on right: 19 25 31 32
class_property_type (132)
    on left: 33 34 35 36 37 38 39 40 41 42, on right: 45 46
class_property_declare (133)
    on left: 43 44 45 46, on right: 20 45 46
value_declare (134)
    on left: 47 48, on right: 20 31 89 186 187 206
declare_type (135)
    on left: 49 50 51 52, on right: 50 52 55 56 57 58 59 60 61 62 63
    64 65 66 67 68 69 71 72
value_declare_type (136)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73, on right: 47 50 53 85 87 90 94 95 97 114 115 134
declare_left_attribute (137)
    on left: 74 75 76 77 78 79 80 81, on right: 53
declare_right_attribute (138)
    on left: 82 83 84, on right: 52
block_declare (139)
    on left: 85 86, on right: 48 86
block_type (140)
    on left: 87 88, on right: 73 88
block_parametere_type (141)
    on left: 89 90, on right: 92 93
func_declare_parameters (142)
    on left: 91 92 93, on right: 86 88 93 115 117
method_declare (143)
    on left: 94 95 96 97, on right: 21 26 96 97
value_expression_list (144)
    on left: 98 99 100, on right: 100 104 106 110 111 125
value_get_operator (145)
    on left: 101 102, on right: 103 104 105 106
objc_method_get (146)
    on left: 103 104 105 106, on right: 105 106 108 112
method_caller_type (147)
    on left: 107 108, on right: 113
objc_method_call_pramameters (148)
    on left: 109 110 111, on right: 111 113
objc_method_call (149)
    on left: 112 113, on right: 124
block_implementation (150)
    on left: 114 115 116 117, on right: 132
object_value_type (151)
    on left: 118 119 120 121 122 123 124 125, on right: 103 104 107
    128
numerical_value_type (152)
    on left: 126 127, on right: 122 133
primary_expression (153)
    on left: 128 129 130 131 132 133 134 135 136 137 138,
    on right: 134 175 188 197 200 206
assign_operator (154)
    on left: 139 140 141 142 143 144 145 146 147, on right: 188
unary_operator (155)
    on left: 148 149, on right: 163
binary_operator (156)
    on left: 150 151 152 153 154 155 156 157 158 159,
    on right: 162
ternary_expression (157)
    on left: 160 161, on right: 160 164
calculator_expression (158)
    on left: 162 163 164, on right: 177
judgement_operator (159)
    on left: 165 166 167 168 169 170 171 172, on right: 174
judgement_expression (160)
    on left: 173 174, on right: 160 161 176
value_expression (161)
    on left: 175 176 177 178, on right: 54 99 100 121 160 161 162 163
    173 174 178 180 187 188 189 192 193 195 196
control_expression (162)
    on left: 179 180 181 182 183, on right: 191
assign_expression (163)
    on left: 184 185, on right: 190
declare_assign_expression (164)
    on left: 186 187, on right: 184
var_assign_expression (165)
    on left: 188, on right: 185
expression (166)
    on left: 189 190 191, on right: 8 203 204 214
if_statement (167)
    on left: 192 193 194, on right: 193 194 207
dowhile_statement (168)
    on left: 195, on right: 210
while_statement (169)
    on left: 196, on right: 209
case_statement (170)
    on left: 197 198 199, on right: 199 201
switch_statement (171)
    on left: 200 201 202, on right: 201 202 208
for_parameter_list (172)
    on left: 203 204, on right: 204 205
for_statement (173)
    on left: 205, on right: 211
forin_statement (174)
    on left: 206, on right: 212
control_statement (175)
    on left: 207 208 209 210 211 212, on right: 9 215
function_implementation (176)
    on left: 213 214 215, on right: 26 114 115 116 117 192 193 194
    195 196 199 205 206 214 215


state 0

    0 $accept: . compile_util $end

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    INTERFACE        shift, and go to state 11
    IMPLEMENTATION   shift, and go to state 12
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    PS               shift, and go to state 27
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    $default  reduce using rule 1 (compile_util)

    compile_util               go to state 56
    definition_list            go to state 57
    definition                 go to state 58
    PS_Define                  go to state 59
    class_declare              go to state 60
    class_implementation       go to state 61
    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 81
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 88


state 1

  192 if_statement: IF . LP value_expression RP LC function_implementation RC

    LP  shift, and go to state 89


state 2

  179 control_expression: _return .
  180                   | _return . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    $default  reduce using rule 179 (control_expression)

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 92


state 3

  181 control_expression: _break .

    $default  reduce using rule 181 (control_expression)


state 4

  182 control_expression: _continue .

    $default  reduce using rule 182 (control_expression)


state 5

  183 control_expression: _goto . IDENTIFIER COLON

    IDENTIFIER  shift, and go to state 93


state 6

  196 while_statement: _while . LP value_expression RP LC function_implementation RC

    LP  shift, and go to state 94


state 7

  195 dowhile_statement: _do . LC function_implementation RC _while LP value_expression RP

    LC  shift, and go to state 95


state 8

  205 for_statement: _for . LP for_parameter_list RP LC function_implementation RC
  206 forin_statement: _for . LP value_declare _in primary_expression RP LC function_implementation RC

    LP  shift, and go to state 96


state 9

  200 switch_statement: _switch . LP primary_expression RP LC

    LP  shift, and go to state 97


state 10

   54 value_declare_type: _typeof . LP value_expression RP

    LP  shift, and go to state 98


state 11

   15 class_declare: INTERFACE . IDENTIFIER COLON IDENTIFIER
   16              | INTERFACE . IDENTIFIER LP IDENTIFIER RP
   17              | INTERFACE . IDENTIFIER LP RP

    IDENTIFIER  shift, and go to state 99


state 12

   23 class_implementation: IMPLEMENTATION . IDENTIFIER
   24                     | IMPLEMENTATION . IDENTIFIER LP IDENTIFIER RP

    IDENTIFIER  shift, and go to state 100


state 13

  130 primary_expression: PROTOCOL . LP IDENTIFIER RP

    LP  shift, and go to state 101


state 14

   77 declare_left_attribute: NONNULL .

    $default  reduce using rule 77 (declare_left_attribute)


state 15

   78 declare_left_attribute: NULLABLE .

    $default  reduce using rule 78 (declare_left_attribute)


state 16

   74 declare_left_attribute: EXTERN .

    $default  reduce using rule 74 (declare_left_attribute)


state 17

   75 declare_left_attribute: STATIC .

    $default  reduce using rule 75 (declare_left_attribute)


state 18

   76 declare_left_attribute: CONST .

    $default  reduce using rule 76 (declare_left_attribute)


state 19

   79 declare_left_attribute: _STRONG .

    $default  reduce using rule 79 (declare_left_attribute)


state 20

   80 declare_left_attribute: _WEAK .

    $default  reduce using rule 80 (declare_left_attribute)


state 21

   81 declare_left_attribute: _BLOCK .

    $default  reduce using rule 81 (declare_left_attribute)


state 22

   71 value_declare_type: IDENTIFIER . declare_type
  118 object_value_type: IDENTIFIER .
  125                  | IDENTIFIER . LP value_expression_list RP

    LP        shift, and go to state 102
    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    CONST       reduce using rule 49 (declare_type)
    _NONNULL    reduce using rule 49 (declare_type)
    _NULLABLE   reduce using rule 49 (declare_type)
    IDENTIFIER  reduce using rule 49 (declare_type)
    LP          [reduce using rule 49 (declare_type)]
    RP          reduce using rule 49 (declare_type)
    RP          [reduce using rule 118 (object_value_type)]
    LT          [reduce using rule 118 (object_value_type)]
    ASTERISK    [reduce using rule 118 (object_value_type)]
    $default    reduce using rule 118 (object_value_type)

    declare_type  go to state 105


state 23

  131 primary_expression: STRING_LITERAL .

    $default  reduce using rule 131 (primary_expression)


state 24

  134 primary_expression: LP . value_declare_type RP primary_expression
  178 value_expression: LP . value_expression RP

    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare_type      go to state 106
    declare_left_attribute  go to state 64
    block_type              go to state 66
    objc_method_get         go to state 67
    objc_method_call        go to state 68
    block_implementation    go to state 69
    object_value_type       go to state 70
    numerical_value_type    go to state 71
    primary_expression      go to state 91
    ternary_expression      go to state 73
    calculator_expression   go to state 74
    judgement_expression    go to state 75
    value_expression        go to state 107


state 25

  113 objc_method_call: LB . method_caller_type objc_method_call_pramameters RB

    IDENTIFIER  shift, and go to state 90
    LB          shift, and go to state 25
    AT          shift, and go to state 26
    _self       shift, and go to state 32
    _super      shift, and go to state 33

    objc_method_get     go to state 108
    method_caller_type  go to state 109
    objc_method_call    go to state 68
    object_value_type   go to state 110


state 26

  121 object_value_type: AT . LP value_expression RP
  122                  | AT . numerical_value_type
  123                  | AT . STRING_LITERAL

    STRING_LITERAL   shift, and go to state 111
    LP               shift, and go to state 112
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54

    numerical_value_type  go to state 113


state 27

   10 PS_Define: PS . includeHeader

    IMPORT   shift, and go to state 114
    INCLUDE  shift, and go to state 115

    includeHeader  go to state 116


state 28

  173 judgement_expression: LOGIC_NOT . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 117


state 29

  138 primary_expression: AND . IDENTIFIER

    IDENTIFIER  shift, and go to state 118


state 30

  114 block_implementation: POWER . value_declare_type LC function_implementation RC
  115                     | POWER . value_declare_type LP func_declare_parameters RP LC function_implementation RC
  116                     | POWER . LC function_implementation RC
  117                     | POWER . LP func_declare_parameters RP LC function_implementation RC

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    LP             shift, and go to state 120
    LC             shift, and go to state 121
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 122
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 31

  137 primary_expression: ASTERISK . IDENTIFIER

    IDENTIFIER  shift, and go to state 123


state 32

  119 object_value_type: _self .

    $default  reduce using rule 119 (object_value_type)


state 33

  120 object_value_type: _super .

    $default  reduce using rule 120 (object_value_type)


state 34

  135 primary_expression: _nil .

    $default  reduce using rule 135 (primary_expression)


state 35

  136 primary_expression: _NULL .

    $default  reduce using rule 136 (primary_expression)


state 36

   67 value_declare_type: _Class . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 124


state 37

   72 value_declare_type: _id . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 125


state 38

   69 value_declare_type: _void . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 126


state 39

   68 value_declare_type: _BOOL . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 127


state 40

   60 value_declare_type: _CHAR . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 128


state 41

   61 value_declare_type: _SHORT . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 129


state 42

   62 value_declare_type: _INT . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 130


state 43

   63 value_declare_type: _LONG . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 131


state 44

   64 value_declare_type: _LLONG . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 132


state 45

   55 value_declare_type: _UCHAR . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 133


state 46

   56 value_declare_type: _USHORT . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 134


state 47

   57 value_declare_type: _UINT . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 135


state 48

   58 value_declare_type: _ULONG . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 136


state 49

   59 value_declare_type: _ULLONG . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 137


state 50

   65 value_declare_type: _DOUBLE . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 138


state 51

   66 value_declare_type: _FLOAT . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 139


state 52

   70 value_declare_type: _instancetype .

    $default  reduce using rule 70 (value_declare_type)


state 53

  126 numerical_value_type: INTETER_LITERAL .

    $default  reduce using rule 126 (numerical_value_type)


state 54

  127 numerical_value_type: DOUBLE_LITERAL .

    $default  reduce using rule 127 (numerical_value_type)


state 55

  129 primary_expression: SELECTOR .

    $default  reduce using rule 129 (primary_expression)


state 56

    0 $accept: compile_util . $end

    $end  shift, and go to state 140


state 57

    2 compile_util: definition_list .
    4 definition_list: definition_list . definition

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    INTERFACE        shift, and go to state 11
    IMPLEMENTATION   shift, and go to state 12
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    PS               shift, and go to state 27
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    $default  reduce using rule 2 (compile_util)

    definition                 go to state 141
    PS_Define                  go to state 59
    class_declare              go to state 60
    class_implementation       go to state 61
    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 81
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 88


state 58

    3 definition_list: definition .

    $default  reduce using rule 3 (definition_list)


state 59

    5 definition: PS_Define .

    $default  reduce using rule 5 (definition)


state 60

    6 definition: class_declare .
   18 class_declare: class_declare . LT protocol_list GT
   19              | class_declare . class_private_varibale_declare
   20              | class_declare . PROPERTY class_property_declare value_declare SEMICOLON
   21              | class_declare . method_declare SEMICOLON
   22              | class_declare . END

    END       shift, and go to state 142
    PROPERTY  shift, and go to state 143
    LC        shift, and go to state 144
    LT        shift, and go to state 145
    SUB       shift, and go to state 146
    ADD       shift, and go to state 147

    $default  reduce using rule 6 (definition)

    class_private_varibale_declare  go to state 148
    method_declare                  go to state 149


state 61

    7 definition: class_implementation .
   25 class_implementation: class_implementation . class_private_varibale_declare
   26                     | class_implementation . method_declare LC function_implementation RC
   27                     | class_implementation . END

    END  shift, and go to state 150
    LC   shift, and go to state 144
    SUB  shift, and go to state 146
    ADD  shift, and go to state 147

    $default  reduce using rule 7 (definition)

    class_private_varibale_declare  go to state 151
    method_declare                  go to state 152


state 62

  186 declare_assign_expression: value_declare .
  187                          | value_declare . ASSIGN value_expression

    ASSIGN  shift, and go to state 153

    $default  reduce using rule 186 (declare_assign_expression)


state 63

   47 value_declare: value_declare_type . IDENTIFIER
   85 block_declare: value_declare_type . LP POWER IDENTIFIER RP
   87 block_type: value_declare_type . LP POWER RP

    IDENTIFIER  shift, and go to state 154
    LP          shift, and go to state 155


state 64

   53 value_declare_type: declare_left_attribute . value_declare_type

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 156
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 65

   48 value_declare: block_declare .
   86 block_declare: block_declare . LP func_declare_parameters RP

    LP  shift, and go to state 157

    $default  reduce using rule 48 (value_declare)


state 66

   73 value_declare_type: block_type .
   88 block_type: block_type . LP func_declare_parameters RP

    LP  shift, and go to state 158

    LP        [reduce using rule 73 (value_declare_type)]
    $default  reduce using rule 73 (value_declare_type)


state 67

  105 objc_method_get: objc_method_get . value_get_operator IDENTIFIER
  106                | objc_method_get . value_get_operator IDENTIFIER LP value_expression_list RP
  112 objc_method_call: objc_method_get .

    DOT  shift, and go to state 159
    SUB  shift, and go to state 160

    DOT       [reduce using rule 112 (objc_method_call)]
    SUB       [reduce using rule 112 (objc_method_call)]
    $default  reduce using rule 112 (objc_method_call)

    value_get_operator  go to state 161


state 68

  124 object_value_type: objc_method_call .

    $default  reduce using rule 124 (object_value_type)


state 69

  132 primary_expression: block_implementation .

    $default  reduce using rule 132 (primary_expression)


state 70

  103 objc_method_get: object_value_type . value_get_operator IDENTIFIER
  104                | object_value_type . value_get_operator IDENTIFIER LP value_expression_list RP
  128 primary_expression: object_value_type .

    DOT  shift, and go to state 159
    SUB  shift, and go to state 160

    SUB       [reduce using rule 128 (primary_expression)]
    $default  reduce using rule 128 (primary_expression)

    value_get_operator  go to state 162


state 71

  133 primary_expression: numerical_value_type .

    $default  reduce using rule 133 (primary_expression)


state 72

  175 value_expression: primary_expression .
  188 var_assign_expression: primary_expression . assign_operator value_expression

    AND_ASSIGN       shift, and go to state 163
    OR_ASSIGN        shift, and go to state 164
    POWER_ASSIGN     shift, and go to state 165
    SUB_ASSIGN       shift, and go to state 166
    ADD_ASSIGN       shift, and go to state 167
    DIV_ASSIGN       shift, and go to state 168
    ASTERISK_ASSIGN  shift, and go to state 169
    ASSIGN           shift, and go to state 170
    MOD_ASSIGN       shift, and go to state 171

    $default  reduce using rule 175 (value_expression)

    assign_operator  go to state 172


state 73

  164 calculator_expression: ternary_expression .

    $default  reduce using rule 164 (calculator_expression)


state 74

  177 value_expression: calculator_expression .

    $default  reduce using rule 177 (value_expression)


state 75

  160 ternary_expression: judgement_expression . QUESTION ternary_expression value_expression COLON value_expression
  161                   | judgement_expression . QUESTION COLON value_expression
  176 value_expression: judgement_expression .

    QUESTION  shift, and go to state 173

    QUESTION  [reduce using rule 176 (value_expression)]
    $default  reduce using rule 176 (value_expression)


state 76

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  189 expression: value_expression . SEMICOLON

    SEMICOLON   shift, and go to state 174
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 77

  191 expression: control_expression . SEMICOLON

    SEMICOLON  shift, and go to state 198


state 78

  190 expression: assign_expression . SEMICOLON

    SEMICOLON  shift, and go to state 199


state 79

  184 assign_expression: declare_assign_expression .

    $default  reduce using rule 184 (assign_expression)


state 80

  185 assign_expression: var_assign_expression .

    $default  reduce using rule 185 (assign_expression)


state 81

    8 definition: expression .

    $default  reduce using rule 8 (definition)


state 82

  193 if_statement: if_statement . _else IF LP value_expression RP LC function_implementation RC
  194             | if_statement . _else LC function_implementation RC
  207 control_statement: if_statement .

    _else  shift, and go to state 200

    $default  reduce using rule 207 (control_statement)


state 83

  210 control_statement: dowhile_statement .

    $default  reduce using rule 210 (control_statement)


state 84

  209 control_statement: while_statement .

    $default  reduce using rule 209 (control_statement)


state 85

  201 switch_statement: switch_statement . case_statement
  202                 | switch_statement . RC
  208 control_statement: switch_statement .

    _case     shift, and go to state 201
    _default  shift, and go to state 202
    RC        shift, and go to state 203

    RC        [reduce using rule 208 (control_statement)]
    $default  reduce using rule 208 (control_statement)

    case_statement  go to state 204


state 86

  211 control_statement: for_statement .

    $default  reduce using rule 211 (control_statement)


state 87

  212 control_statement: forin_statement .

    $default  reduce using rule 212 (control_statement)


state 88

    9 definition: control_statement .

    $default  reduce using rule 9 (definition)


state 89

  192 if_statement: IF LP . value_expression RP LC function_implementation RC

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 205


state 90

  118 object_value_type: IDENTIFIER .
  125                  | IDENTIFIER . LP value_expression_list RP

    LP  shift, and go to state 102

    LP        [reduce using rule 118 (object_value_type)]
    $default  reduce using rule 118 (object_value_type)


state 91

  175 value_expression: primary_expression .

    $default  reduce using rule 175 (value_expression)


state 92

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  180 control_expression: _return value_expression .

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    $default  reduce using rule 180 (control_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 93

  183 control_expression: _goto IDENTIFIER . COLON

    COLON  shift, and go to state 206


state 94

  196 while_statement: _while LP . value_expression RP LC function_implementation RC

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 207


state 95

  195 dowhile_statement: _do LC . function_implementation RC _while LP value_expression RP

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 208


state 96

  205 for_statement: _for LP . for_parameter_list RP LC function_implementation RC
  206 forin_statement: _for LP . value_declare _in primary_expression RP LC function_implementation RC

    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 209
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 210
    for_parameter_list         go to state 211


state 97

  200 switch_statement: _switch LP . primary_expression RP LC

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 212
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get       go to state 67
    objc_method_call      go to state 68
    block_implementation  go to state 69
    object_value_type     go to state 70
    numerical_value_type  go to state 71
    primary_expression    go to state 213


state 98

   54 value_declare_type: _typeof LP . value_expression RP

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 214


state 99

   15 class_declare: INTERFACE IDENTIFIER . COLON IDENTIFIER
   16              | INTERFACE IDENTIFIER . LP IDENTIFIER RP
   17              | INTERFACE IDENTIFIER . LP RP

    COLON  shift, and go to state 215
    LP     shift, and go to state 216


state 100

   23 class_implementation: IMPLEMENTATION IDENTIFIER .
   24                     | IMPLEMENTATION IDENTIFIER . LP IDENTIFIER RP

    LP  shift, and go to state 217

    LP        [reduce using rule 23 (class_implementation)]
    $default  reduce using rule 23 (class_implementation)


state 101

  130 primary_expression: PROTOCOL LP . IDENTIFIER RP

    IDENTIFIER  shift, and go to state 218


state 102

  125 object_value_type: IDENTIFIER LP . value_expression_list RP

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    $default  reduce using rule 98 (value_expression_list)

    value_expression_list  go to state 219
    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 220


state 103

   50 declare_type: LT . value_declare_type GT declare_type

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 221
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 104

   51 declare_type: ASTERISK .

    $default  reduce using rule 51 (declare_type)


state 105

   52 declare_type: declare_type . declare_right_attribute
   71 value_declare_type: IDENTIFIER declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 71 (value_declare_type)

    declare_right_attribute  go to state 225


state 106

   87 block_type: value_declare_type . LP POWER RP
  134 primary_expression: LP value_declare_type . RP primary_expression

    LP  shift, and go to state 226
    RP  shift, and go to state 227


state 107

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  178 value_expression: LP value_expression . RP

    RP          shift, and go to state 228
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 108

  105 objc_method_get: objc_method_get . value_get_operator IDENTIFIER
  106                | objc_method_get . value_get_operator IDENTIFIER LP value_expression_list RP
  108 method_caller_type: objc_method_get .
  112 objc_method_call: objc_method_get .

    DOT  shift, and go to state 159
    SUB  shift, and go to state 160

    IDENTIFIER  reduce using rule 108 (method_caller_type)
    IDENTIFIER  [reduce using rule 112 (objc_method_call)]
    DOT         [reduce using rule 112 (objc_method_call)]
    SUB         [reduce using rule 112 (objc_method_call)]
    $default    reduce using rule 108 (method_caller_type)

    value_get_operator  go to state 161


state 109

  113 objc_method_call: LB method_caller_type . objc_method_call_pramameters RB

    IDENTIFIER  shift, and go to state 229

    objc_method_call_pramameters  go to state 230


state 110

  103 objc_method_get: object_value_type . value_get_operator IDENTIFIER
  104                | object_value_type . value_get_operator IDENTIFIER LP value_expression_list RP
  107 method_caller_type: object_value_type .

    DOT  shift, and go to state 159
    SUB  shift, and go to state 160

    $default  reduce using rule 107 (method_caller_type)

    value_get_operator  go to state 162


state 111

  123 object_value_type: AT STRING_LITERAL .

    $default  reduce using rule 123 (object_value_type)


state 112

  121 object_value_type: AT LP . value_expression RP

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 231


state 113

  122 object_value_type: AT numerical_value_type .

    $default  reduce using rule 122 (object_value_type)


state 114

   11 includeHeader: IMPORT .

    $default  reduce using rule 11 (includeHeader)


state 115

   12 includeHeader: INCLUDE .

    $default  reduce using rule 12 (includeHeader)


state 116

   10 PS_Define: PS includeHeader .
   13 includeHeader: includeHeader . LT IDENTIFIER DIV IDENTIFIER DOT IDENTIFIER GT
   14              | includeHeader . STRING_LITERAL

    STRING_LITERAL  shift, and go to state 232
    LT              shift, and go to state 233

    STRING_LITERAL  [reduce using rule 10 (PS_Define)]
    $default        reduce using rule 10 (PS_Define)


state 117

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  173 judgement_expression: LOGIC_NOT value_expression .
  174                     | value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    EQ          [reduce using rule 173 (judgement_expression)]
    NE          [reduce using rule 173 (judgement_expression)]
    LT          [reduce using rule 173 (judgement_expression)]
    LE          [reduce using rule 173 (judgement_expression)]
    GT          [reduce using rule 173 (judgement_expression)]
    GE          [reduce using rule 173 (judgement_expression)]
    LOGIC_AND   [reduce using rule 173 (judgement_expression)]
    LOGIC_OR    [reduce using rule 173 (judgement_expression)]
    AND         [reduce using rule 173 (judgement_expression)]
    OR          [reduce using rule 173 (judgement_expression)]
    POWER       [reduce using rule 173 (judgement_expression)]
    SUB         [reduce using rule 173 (judgement_expression)]
    ADD         [reduce using rule 173 (judgement_expression)]
    DIV         [reduce using rule 173 (judgement_expression)]
    ASTERISK    [reduce using rule 173 (judgement_expression)]
    INCREMENT   [reduce using rule 173 (judgement_expression)]
    DECREMENT   [reduce using rule 173 (judgement_expression)]
    SHIFTLEFT   [reduce using rule 173 (judgement_expression)]
    SHIFTRIGHT  [reduce using rule 173 (judgement_expression)]
    MOD         [reduce using rule 173 (judgement_expression)]
    $default    reduce using rule 173 (judgement_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 118

  138 primary_expression: AND IDENTIFIER .

    $default  reduce using rule 138 (primary_expression)


state 119

   71 value_declare_type: IDENTIFIER . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 105


state 120

  117 block_implementation: POWER LP . func_declare_parameters RP LC function_implementation RC

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    $default  reduce using rule 91 (func_declare_parameters)

    value_declare            go to state 234
    value_declare_type       go to state 235
    declare_left_attribute   go to state 64
    block_declare            go to state 65
    block_type               go to state 66
    block_parametere_type    go to state 236
    func_declare_parameters  go to state 237


state 121

  116 block_implementation: POWER LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 238


state 122

   87 block_type: value_declare_type . LP POWER RP
  114 block_implementation: POWER value_declare_type . LC function_implementation RC
  115                     | POWER value_declare_type . LP func_declare_parameters RP LC function_implementation RC

    LP  shift, and go to state 239
    LC  shift, and go to state 240


state 123

  137 primary_expression: ASTERISK IDENTIFIER .

    $default  reduce using rule 137 (primary_expression)


state 124

   52 declare_type: declare_type . declare_right_attribute
   67 value_declare_type: _Class declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 67 (value_declare_type)

    declare_right_attribute  go to state 225


state 125

   52 declare_type: declare_type . declare_right_attribute
   72 value_declare_type: _id declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 72 (value_declare_type)

    declare_right_attribute  go to state 225


state 126

   52 declare_type: declare_type . declare_right_attribute
   69 value_declare_type: _void declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 69 (value_declare_type)

    declare_right_attribute  go to state 225


state 127

   52 declare_type: declare_type . declare_right_attribute
   68 value_declare_type: _BOOL declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 68 (value_declare_type)

    declare_right_attribute  go to state 225


state 128

   52 declare_type: declare_type . declare_right_attribute
   60 value_declare_type: _CHAR declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 60 (value_declare_type)

    declare_right_attribute  go to state 225


state 129

   52 declare_type: declare_type . declare_right_attribute
   61 value_declare_type: _SHORT declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 61 (value_declare_type)

    declare_right_attribute  go to state 225


state 130

   52 declare_type: declare_type . declare_right_attribute
   62 value_declare_type: _INT declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 62 (value_declare_type)

    declare_right_attribute  go to state 225


state 131

   52 declare_type: declare_type . declare_right_attribute
   63 value_declare_type: _LONG declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 63 (value_declare_type)

    declare_right_attribute  go to state 225


state 132

   52 declare_type: declare_type . declare_right_attribute
   64 value_declare_type: _LLONG declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 64 (value_declare_type)

    declare_right_attribute  go to state 225


state 133

   52 declare_type: declare_type . declare_right_attribute
   55 value_declare_type: _UCHAR declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 55 (value_declare_type)

    declare_right_attribute  go to state 225


state 134

   52 declare_type: declare_type . declare_right_attribute
   56 value_declare_type: _USHORT declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 56 (value_declare_type)

    declare_right_attribute  go to state 225


state 135

   52 declare_type: declare_type . declare_right_attribute
   57 value_declare_type: _UINT declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 57 (value_declare_type)

    declare_right_attribute  go to state 225


state 136

   52 declare_type: declare_type . declare_right_attribute
   58 value_declare_type: _ULONG declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 58 (value_declare_type)

    declare_right_attribute  go to state 225


state 137

   52 declare_type: declare_type . declare_right_attribute
   59 value_declare_type: _ULLONG declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 59 (value_declare_type)

    declare_right_attribute  go to state 225


state 138

   52 declare_type: declare_type . declare_right_attribute
   65 value_declare_type: _DOUBLE declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 65 (value_declare_type)

    declare_right_attribute  go to state 225


state 139

   52 declare_type: declare_type . declare_right_attribute
   66 value_declare_type: _FLOAT declare_type .

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    $default  reduce using rule 66 (value_declare_type)

    declare_right_attribute  go to state 225


state 140

    0 $accept: compile_util $end .

    $default  accept


state 141

    4 definition_list: definition_list definition .

    $default  reduce using rule 4 (definition_list)


state 142

   22 class_declare: class_declare END .

    $default  reduce using rule 22 (class_declare)


state 143

   20 class_declare: class_declare PROPERTY . class_property_declare value_declare SEMICOLON

    LP  shift, and go to state 241

    $default  reduce using rule 43 (class_property_declare)

    class_property_declare  go to state 242


state 144

   30 class_private_varibale_declare: LC .

    $default  reduce using rule 30 (class_private_varibale_declare)


state 145

   18 class_declare: class_declare LT . protocol_list GT

    IDENTIFIER  shift, and go to state 243

    protocol_list  go to state 244


state 146

   94 method_declare: SUB . LP value_declare_type RP

    LP  shift, and go to state 245


state 147

   95 method_declare: ADD . LP value_declare_type RP

    LP  shift, and go to state 246


state 148

   19 class_declare: class_declare class_private_varibale_declare .
   31 class_private_varibale_declare: class_private_varibale_declare . value_declare SEMICOLON
   32                               | class_private_varibale_declare . RC

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    RC             shift, and go to state 247
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    _typeof        [reduce using rule 19 (class_declare)]
    NONNULL        [reduce using rule 19 (class_declare)]
    NULLABLE       [reduce using rule 19 (class_declare)]
    EXTERN         [reduce using rule 19 (class_declare)]
    STATIC         [reduce using rule 19 (class_declare)]
    CONST          [reduce using rule 19 (class_declare)]
    _STRONG        [reduce using rule 19 (class_declare)]
    _WEAK          [reduce using rule 19 (class_declare)]
    _BLOCK         [reduce using rule 19 (class_declare)]
    IDENTIFIER     [reduce using rule 19 (class_declare)]
    _Class         [reduce using rule 19 (class_declare)]
    _id            [reduce using rule 19 (class_declare)]
    _void          [reduce using rule 19 (class_declare)]
    _BOOL          [reduce using rule 19 (class_declare)]
    _CHAR          [reduce using rule 19 (class_declare)]
    _SHORT         [reduce using rule 19 (class_declare)]
    _INT           [reduce using rule 19 (class_declare)]
    _LONG          [reduce using rule 19 (class_declare)]
    _LLONG         [reduce using rule 19 (class_declare)]
    _UCHAR         [reduce using rule 19 (class_declare)]
    _USHORT        [reduce using rule 19 (class_declare)]
    _UINT          [reduce using rule 19 (class_declare)]
    _ULONG         [reduce using rule 19 (class_declare)]
    _ULLONG        [reduce using rule 19 (class_declare)]
    _DOUBLE        [reduce using rule 19 (class_declare)]
    _FLOAT         [reduce using rule 19 (class_declare)]
    _instancetype  [reduce using rule 19 (class_declare)]
    $default       reduce using rule 19 (class_declare)

    value_declare           go to state 248
    value_declare_type      go to state 63
    declare_left_attribute  go to state 64
    block_declare           go to state 65
    block_type              go to state 66


state 149

   21 class_declare: class_declare method_declare . SEMICOLON
   96 method_declare: method_declare . IDENTIFIER
   97               | method_declare . IDENTIFIER COLON LP value_declare_type RP IDENTIFIER

    IDENTIFIER  shift, and go to state 249
    SEMICOLON   shift, and go to state 250


state 150

   27 class_implementation: class_implementation END .

    $default  reduce using rule 27 (class_implementation)


state 151

   25 class_implementation: class_implementation class_private_varibale_declare .
   31 class_private_varibale_declare: class_private_varibale_declare . value_declare SEMICOLON
   32                               | class_private_varibale_declare . RC

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    RC             shift, and go to state 247
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    _typeof        [reduce using rule 25 (class_implementation)]
    NONNULL        [reduce using rule 25 (class_implementation)]
    NULLABLE       [reduce using rule 25 (class_implementation)]
    EXTERN         [reduce using rule 25 (class_implementation)]
    STATIC         [reduce using rule 25 (class_implementation)]
    CONST          [reduce using rule 25 (class_implementation)]
    _STRONG        [reduce using rule 25 (class_implementation)]
    _WEAK          [reduce using rule 25 (class_implementation)]
    _BLOCK         [reduce using rule 25 (class_implementation)]
    IDENTIFIER     [reduce using rule 25 (class_implementation)]
    _Class         [reduce using rule 25 (class_implementation)]
    _id            [reduce using rule 25 (class_implementation)]
    _void          [reduce using rule 25 (class_implementation)]
    _BOOL          [reduce using rule 25 (class_implementation)]
    _CHAR          [reduce using rule 25 (class_implementation)]
    _SHORT         [reduce using rule 25 (class_implementation)]
    _INT           [reduce using rule 25 (class_implementation)]
    _LONG          [reduce using rule 25 (class_implementation)]
    _LLONG         [reduce using rule 25 (class_implementation)]
    _UCHAR         [reduce using rule 25 (class_implementation)]
    _USHORT        [reduce using rule 25 (class_implementation)]
    _UINT          [reduce using rule 25 (class_implementation)]
    _ULONG         [reduce using rule 25 (class_implementation)]
    _ULLONG        [reduce using rule 25 (class_implementation)]
    _DOUBLE        [reduce using rule 25 (class_implementation)]
    _FLOAT         [reduce using rule 25 (class_implementation)]
    _instancetype  [reduce using rule 25 (class_implementation)]
    $default       reduce using rule 25 (class_implementation)

    value_declare           go to state 248
    value_declare_type      go to state 63
    declare_left_attribute  go to state 64
    block_declare           go to state 65
    block_type              go to state 66


state 152

   26 class_implementation: class_implementation method_declare . LC function_implementation RC
   96 method_declare: method_declare . IDENTIFIER
   97               | method_declare . IDENTIFIER COLON LP value_declare_type RP IDENTIFIER

    IDENTIFIER  shift, and go to state 249
    LC          shift, and go to state 251


state 153

  187 declare_assign_expression: value_declare ASSIGN . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 252


state 154

   47 value_declare: value_declare_type IDENTIFIER .

    $default  reduce using rule 47 (value_declare)


state 155

   85 block_declare: value_declare_type LP . POWER IDENTIFIER RP
   87 block_type: value_declare_type LP . POWER RP

    POWER  shift, and go to state 253


state 156

   53 value_declare_type: declare_left_attribute value_declare_type .
   87 block_type: value_declare_type . LP POWER RP

    LP  shift, and go to state 226

    LP        [reduce using rule 53 (value_declare_type)]
    $default  reduce using rule 53 (value_declare_type)


state 157

   86 block_declare: block_declare LP . func_declare_parameters RP

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    $default  reduce using rule 91 (func_declare_parameters)

    value_declare            go to state 234
    value_declare_type       go to state 235
    declare_left_attribute   go to state 64
    block_declare            go to state 65
    block_type               go to state 66
    block_parametere_type    go to state 236
    func_declare_parameters  go to state 254


state 158

   88 block_type: block_type LP . func_declare_parameters RP

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    $default  reduce using rule 91 (func_declare_parameters)

    value_declare            go to state 234
    value_declare_type       go to state 235
    declare_left_attribute   go to state 64
    block_declare            go to state 65
    block_type               go to state 66
    block_parametere_type    go to state 236
    func_declare_parameters  go to state 255


state 159

  101 value_get_operator: DOT .

    $default  reduce using rule 101 (value_get_operator)


state 160

  102 value_get_operator: SUB . GT

    GT  shift, and go to state 256


state 161

  105 objc_method_get: objc_method_get value_get_operator . IDENTIFIER
  106                | objc_method_get value_get_operator . IDENTIFIER LP value_expression_list RP

    IDENTIFIER  shift, and go to state 257


state 162

  103 objc_method_get: object_value_type value_get_operator . IDENTIFIER
  104                | object_value_type value_get_operator . IDENTIFIER LP value_expression_list RP

    IDENTIFIER  shift, and go to state 258


state 163

  140 assign_operator: AND_ASSIGN .

    $default  reduce using rule 140 (assign_operator)


state 164

  141 assign_operator: OR_ASSIGN .

    $default  reduce using rule 141 (assign_operator)


state 165

  142 assign_operator: POWER_ASSIGN .

    $default  reduce using rule 142 (assign_operator)


state 166

  144 assign_operator: SUB_ASSIGN .

    $default  reduce using rule 144 (assign_operator)


state 167

  143 assign_operator: ADD_ASSIGN .

    $default  reduce using rule 143 (assign_operator)


state 168

  145 assign_operator: DIV_ASSIGN .

    $default  reduce using rule 145 (assign_operator)


state 169

  146 assign_operator: ASTERISK_ASSIGN .

    $default  reduce using rule 146 (assign_operator)


state 170

  139 assign_operator: ASSIGN .

    $default  reduce using rule 139 (assign_operator)


state 171

  147 assign_operator: MOD_ASSIGN .

    $default  reduce using rule 147 (assign_operator)


state 172

  188 var_assign_expression: primary_expression assign_operator . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 259


state 173

  160 ternary_expression: judgement_expression QUESTION . ternary_expression value_expression COLON value_expression
  161                   | judgement_expression QUESTION . COLON value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    COLON            shift, and go to state 260
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 261
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 262


state 174

  189 expression: value_expression SEMICOLON .

    $default  reduce using rule 189 (expression)


state 175

  165 judgement_operator: EQ .

    $default  reduce using rule 165 (judgement_operator)


state 176

  166 judgement_operator: NE .

    $default  reduce using rule 166 (judgement_operator)


state 177

  168 judgement_operator: LT .

    $default  reduce using rule 168 (judgement_operator)


state 178

  167 judgement_operator: LE .

    $default  reduce using rule 167 (judgement_operator)


state 179

  170 judgement_operator: GT .

    $default  reduce using rule 170 (judgement_operator)


state 180

  169 judgement_operator: GE .

    $default  reduce using rule 169 (judgement_operator)


state 181

  171 judgement_operator: LOGIC_AND .

    $default  reduce using rule 171 (judgement_operator)


state 182

  172 judgement_operator: LOGIC_OR .

    $default  reduce using rule 172 (judgement_operator)


state 183

  157 binary_operator: AND .

    $default  reduce using rule 157 (binary_operator)


state 184

  158 binary_operator: OR .

    $default  reduce using rule 158 (binary_operator)


state 185

  159 binary_operator: POWER .

    $default  reduce using rule 159 (binary_operator)


state 186

  151 binary_operator: SUB .

    $default  reduce using rule 151 (binary_operator)


state 187

  150 binary_operator: ADD .

    $default  reduce using rule 150 (binary_operator)


state 188

  153 binary_operator: DIV .

    $default  reduce using rule 153 (binary_operator)


state 189

  152 binary_operator: ASTERISK .

    $default  reduce using rule 152 (binary_operator)


state 190

  148 unary_operator: INCREMENT .

    $default  reduce using rule 148 (unary_operator)


state 191

  149 unary_operator: DECREMENT .

    $default  reduce using rule 149 (unary_operator)


state 192

  155 binary_operator: SHIFTLEFT .

    $default  reduce using rule 155 (binary_operator)


state 193

  156 binary_operator: SHIFTRIGHT .

    $default  reduce using rule 156 (binary_operator)


state 194

  154 binary_operator: MOD .

    $default  reduce using rule 154 (binary_operator)


state 195

  163 calculator_expression: value_expression unary_operator .

    $default  reduce using rule 163 (calculator_expression)


state 196

  162 calculator_expression: value_expression binary_operator . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 263


state 197

  174 judgement_expression: value_expression judgement_operator . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 264


state 198

  191 expression: control_expression SEMICOLON .

    $default  reduce using rule 191 (expression)


state 199

  190 expression: assign_expression SEMICOLON .

    $default  reduce using rule 190 (expression)


state 200

  193 if_statement: if_statement _else . IF LP value_expression RP LC function_implementation RC
  194             | if_statement _else . LC function_implementation RC

    IF  shift, and go to state 265
    LC  shift, and go to state 266


state 201

  197 case_statement: _case . primary_expression COLON

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 212
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get       go to state 67
    objc_method_call      go to state 68
    block_implementation  go to state 69
    object_value_type     go to state 70
    numerical_value_type  go to state 71
    primary_expression    go to state 267


state 202

  198 case_statement: _default . COLON

    COLON  shift, and go to state 268


state 203

  202 switch_statement: switch_statement RC .

    $default  reduce using rule 202 (switch_statement)


state 204

  199 case_statement: case_statement . LC function_implementation RC
  201 switch_statement: switch_statement case_statement .

    LC  shift, and go to state 269

    $default  reduce using rule 201 (switch_statement)


state 205

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  192 if_statement: IF LP value_expression . RP LC function_implementation RC

    RP          shift, and go to state 270
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 206

  183 control_expression: _goto IDENTIFIER COLON .

    $default  reduce using rule 183 (control_expression)


state 207

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  196 while_statement: _while LP value_expression . RP LC function_implementation RC

    RP          shift, and go to state 271
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 208

  195 dowhile_statement: _do LC function_implementation . RC _while LP value_expression RP
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 272
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 209

  186 declare_assign_expression: value_declare .
  187                          | value_declare . ASSIGN value_expression
  206 forin_statement: _for LP value_declare . _in primary_expression RP LC function_implementation RC

    _in     shift, and go to state 275
    ASSIGN  shift, and go to state 153

    $default  reduce using rule 186 (declare_assign_expression)


state 210

  203 for_parameter_list: expression .

    $default  reduce using rule 203 (for_parameter_list)


state 211

  204 for_parameter_list: for_parameter_list . SEMICOLON expression
  205 for_statement: _for LP for_parameter_list . RP LC function_implementation RC

    SEMICOLON  shift, and go to state 276
    RP         shift, and go to state 277


state 212

  134 primary_expression: LP . value_declare_type RP primary_expression

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 106
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 213

  200 switch_statement: _switch LP primary_expression . RP LC

    RP  shift, and go to state 278


state 214

   54 value_declare_type: _typeof LP value_expression . RP
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    RP          shift, and go to state 279
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 215

   15 class_declare: INTERFACE IDENTIFIER COLON . IDENTIFIER

    IDENTIFIER  shift, and go to state 280


state 216

   16 class_declare: INTERFACE IDENTIFIER LP . IDENTIFIER RP
   17              | INTERFACE IDENTIFIER LP . RP

    IDENTIFIER  shift, and go to state 281
    RP          shift, and go to state 282


state 217

   24 class_implementation: IMPLEMENTATION IDENTIFIER LP . IDENTIFIER RP

    IDENTIFIER  shift, and go to state 283


state 218

  130 primary_expression: PROTOCOL LP IDENTIFIER . RP

    RP  shift, and go to state 284


state 219

  100 value_expression_list: value_expression_list . COMMA value_expression
  125 object_value_type: IDENTIFIER LP value_expression_list . RP

    COMMA  shift, and go to state 285
    RP     shift, and go to state 286


state 220

   99 value_expression_list: value_expression .
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    $default  reduce using rule 99 (value_expression_list)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 221

   50 declare_type: LT value_declare_type . GT declare_type
   87 block_type: value_declare_type . LP POWER RP

    LP  shift, and go to state 226
    GT  shift, and go to state 287


state 222

   84 declare_right_attribute: CONST .

    $default  reduce using rule 84 (declare_right_attribute)


state 223

   82 declare_right_attribute: _NONNULL .

    $default  reduce using rule 82 (declare_right_attribute)


state 224

   83 declare_right_attribute: _NULLABLE .

    $default  reduce using rule 83 (declare_right_attribute)


state 225

   52 declare_type: declare_type declare_right_attribute .

    $default  reduce using rule 52 (declare_type)


state 226

   87 block_type: value_declare_type LP . POWER RP

    POWER  shift, and go to state 288


state 227

  134 primary_expression: LP value_declare_type RP . primary_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 212
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get       go to state 67
    objc_method_call      go to state 68
    block_implementation  go to state 69
    object_value_type     go to state 70
    numerical_value_type  go to state 71
    primary_expression    go to state 289


state 228

  178 value_expression: LP value_expression RP .

    $default  reduce using rule 178 (value_expression)


state 229

  109 objc_method_call_pramameters: IDENTIFIER .
  110                             | IDENTIFIER . COLON value_expression_list

    COLON  shift, and go to state 290

    $default  reduce using rule 109 (objc_method_call_pramameters)


state 230

  111 objc_method_call_pramameters: objc_method_call_pramameters . IDENTIFIER COLON value_expression_list
  113 objc_method_call: LB method_caller_type objc_method_call_pramameters . RB

    IDENTIFIER  shift, and go to state 291
    RB          shift, and go to state 292


state 231

  121 object_value_type: AT LP value_expression . RP
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    RP          shift, and go to state 293
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 232

   14 includeHeader: includeHeader STRING_LITERAL .

    $default  reduce using rule 14 (includeHeader)


state 233

   13 includeHeader: includeHeader LT . IDENTIFIER DIV IDENTIFIER DOT IDENTIFIER GT

    IDENTIFIER  shift, and go to state 294


state 234

   89 block_parametere_type: value_declare .

    $default  reduce using rule 89 (block_parametere_type)


state 235

   47 value_declare: value_declare_type . IDENTIFIER
   85 block_declare: value_declare_type . LP POWER IDENTIFIER RP
   87 block_type: value_declare_type . LP POWER RP
   90 block_parametere_type: value_declare_type .

    IDENTIFIER  shift, and go to state 154
    LP          shift, and go to state 155

    $default  reduce using rule 90 (block_parametere_type)


state 236

   92 func_declare_parameters: block_parametere_type .

    $default  reduce using rule 92 (func_declare_parameters)


state 237

   93 func_declare_parameters: func_declare_parameters . COMMA block_parametere_type
  117 block_implementation: POWER LP func_declare_parameters . RP LC function_implementation RC

    COMMA  shift, and go to state 295
    RP     shift, and go to state 296


state 238

  116 block_implementation: POWER LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 297
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 239

   87 block_type: value_declare_type LP . POWER RP
  115 block_implementation: POWER value_declare_type LP . func_declare_parameters RP LC function_implementation RC

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    POWER          shift, and go to state 288
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    $default  reduce using rule 91 (func_declare_parameters)

    value_declare            go to state 234
    value_declare_type       go to state 235
    declare_left_attribute   go to state 64
    block_declare            go to state 65
    block_type               go to state 66
    block_parametere_type    go to state 236
    func_declare_parameters  go to state 298


state 240

  114 block_implementation: POWER value_declare_type LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 299


state 241

   44 class_property_declare: LP .

    $default  reduce using rule 44 (class_property_declare)


state 242

   20 class_declare: class_declare PROPERTY class_property_declare . value_declare SEMICOLON
   45 class_property_declare: class_property_declare . class_property_type COMMA
   46                       | class_property_declare . class_property_type RP

    _typeof        shift, and go to state 10
    WEAK           shift, and go to state 300
    STRONG         shift, and go to state 301
    COPY           shift, and go to state 302
    ASSIGN_MEM     shift, and go to state 303
    NONATOMIC      shift, and go to state 304
    ATOMIC         shift, and go to state 305
    READONLY       shift, and go to state 306
    READWRITE      shift, and go to state 307
    NONNULL        shift, and go to state 308
    NULLABLE       shift, and go to state 309
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    class_property_type     go to state 310
    value_declare           go to state 311
    value_declare_type      go to state 63
    declare_left_attribute  go to state 64
    block_declare           go to state 65
    block_type              go to state 66


state 243

   28 protocol_list: IDENTIFIER .

    $default  reduce using rule 28 (protocol_list)


state 244

   18 class_declare: class_declare LT protocol_list . GT
   29 protocol_list: protocol_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 312
    GT     shift, and go to state 313


state 245

   94 method_declare: SUB LP . value_declare_type RP

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 314
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 246

   95 method_declare: ADD LP . value_declare_type RP

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 315
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 247

   32 class_private_varibale_declare: class_private_varibale_declare RC .

    $default  reduce using rule 32 (class_private_varibale_declare)


state 248

   31 class_private_varibale_declare: class_private_varibale_declare value_declare . SEMICOLON

    SEMICOLON  shift, and go to state 316


state 249

   96 method_declare: method_declare IDENTIFIER .
   97               | method_declare IDENTIFIER . COLON LP value_declare_type RP IDENTIFIER

    COLON  shift, and go to state 317

    $default  reduce using rule 96 (method_declare)


state 250

   21 class_declare: class_declare method_declare SEMICOLON .

    $default  reduce using rule 21 (class_declare)


state 251

   26 class_implementation: class_implementation method_declare LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 318


state 252

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  187 declare_assign_expression: value_declare ASSIGN value_expression .

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    $default  reduce using rule 187 (declare_assign_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 253

   85 block_declare: value_declare_type LP POWER . IDENTIFIER RP
   87 block_type: value_declare_type LP POWER . RP

    IDENTIFIER  shift, and go to state 319
    RP          shift, and go to state 320


state 254

   86 block_declare: block_declare LP func_declare_parameters . RP
   93 func_declare_parameters: func_declare_parameters . COMMA block_parametere_type

    COMMA  shift, and go to state 295
    RP     shift, and go to state 321


state 255

   88 block_type: block_type LP func_declare_parameters . RP
   93 func_declare_parameters: func_declare_parameters . COMMA block_parametere_type

    COMMA  shift, and go to state 295
    RP     shift, and go to state 322


state 256

  102 value_get_operator: SUB GT .

    $default  reduce using rule 102 (value_get_operator)


state 257

  105 objc_method_get: objc_method_get value_get_operator IDENTIFIER .
  106                | objc_method_get value_get_operator IDENTIFIER . LP value_expression_list RP

    LP  shift, and go to state 323

    LP        [reduce using rule 105 (objc_method_get)]
    $default  reduce using rule 105 (objc_method_get)


state 258

  103 objc_method_get: object_value_type value_get_operator IDENTIFIER .
  104                | object_value_type value_get_operator IDENTIFIER . LP value_expression_list RP

    LP  shift, and go to state 324

    LP        [reduce using rule 103 (objc_method_get)]
    $default  reduce using rule 103 (objc_method_get)


state 259

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  188 var_assign_expression: primary_expression assign_operator value_expression .

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    $default  reduce using rule 188 (var_assign_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 260

  161 ternary_expression: judgement_expression QUESTION COLON . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 325


state 261

  160 ternary_expression: judgement_expression QUESTION ternary_expression . value_expression COLON value_expression
  164 calculator_expression: ternary_expression .

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    AND       [reduce using rule 164 (calculator_expression)]
    POWER     [reduce using rule 164 (calculator_expression)]
    ASTERISK  [reduce using rule 164 (calculator_expression)]
    $default  reduce using rule 164 (calculator_expression)

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 326


state 262

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 263

  162 calculator_expression: value_expression . binary_operator value_expression
  162                      | value_expression binary_operator value_expression .
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    EQ          [reduce using rule 162 (calculator_expression)]
    NE          [reduce using rule 162 (calculator_expression)]
    LT          [reduce using rule 162 (calculator_expression)]
    LE          [reduce using rule 162 (calculator_expression)]
    GT          [reduce using rule 162 (calculator_expression)]
    GE          [reduce using rule 162 (calculator_expression)]
    LOGIC_AND   [reduce using rule 162 (calculator_expression)]
    LOGIC_OR    [reduce using rule 162 (calculator_expression)]
    AND         [reduce using rule 162 (calculator_expression)]
    OR          [reduce using rule 162 (calculator_expression)]
    POWER       [reduce using rule 162 (calculator_expression)]
    SUB         [reduce using rule 162 (calculator_expression)]
    ADD         [reduce using rule 162 (calculator_expression)]
    DIV         [reduce using rule 162 (calculator_expression)]
    ASTERISK    [reduce using rule 162 (calculator_expression)]
    INCREMENT   [reduce using rule 162 (calculator_expression)]
    DECREMENT   [reduce using rule 162 (calculator_expression)]
    SHIFTLEFT   [reduce using rule 162 (calculator_expression)]
    SHIFTRIGHT  [reduce using rule 162 (calculator_expression)]
    MOD         [reduce using rule 162 (calculator_expression)]
    $default    reduce using rule 162 (calculator_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 264

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  174                     | value_expression judgement_operator value_expression .

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    EQ          [reduce using rule 174 (judgement_expression)]
    NE          [reduce using rule 174 (judgement_expression)]
    LT          [reduce using rule 174 (judgement_expression)]
    LE          [reduce using rule 174 (judgement_expression)]
    GT          [reduce using rule 174 (judgement_expression)]
    GE          [reduce using rule 174 (judgement_expression)]
    LOGIC_AND   [reduce using rule 174 (judgement_expression)]
    LOGIC_OR    [reduce using rule 174 (judgement_expression)]
    AND         [reduce using rule 174 (judgement_expression)]
    OR          [reduce using rule 174 (judgement_expression)]
    POWER       [reduce using rule 174 (judgement_expression)]
    SUB         [reduce using rule 174 (judgement_expression)]
    ADD         [reduce using rule 174 (judgement_expression)]
    DIV         [reduce using rule 174 (judgement_expression)]
    ASTERISK    [reduce using rule 174 (judgement_expression)]
    INCREMENT   [reduce using rule 174 (judgement_expression)]
    DECREMENT   [reduce using rule 174 (judgement_expression)]
    SHIFTLEFT   [reduce using rule 174 (judgement_expression)]
    SHIFTRIGHT  [reduce using rule 174 (judgement_expression)]
    MOD         [reduce using rule 174 (judgement_expression)]
    $default    reduce using rule 174 (judgement_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 265

  193 if_statement: if_statement _else IF . LP value_expression RP LC function_implementation RC

    LP  shift, and go to state 327


state 266

  194 if_statement: if_statement _else LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 328


state 267

  197 case_statement: _case primary_expression . COLON

    COLON  shift, and go to state 329


state 268

  198 case_statement: _default COLON .

    $default  reduce using rule 198 (case_statement)


state 269

  199 case_statement: case_statement LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 330


state 270

  192 if_statement: IF LP value_expression RP . LC function_implementation RC

    LC  shift, and go to state 331


state 271

  196 while_statement: _while LP value_expression RP . LC function_implementation RC

    LC  shift, and go to state 332


state 272

  195 dowhile_statement: _do LC function_implementation RC . _while LP value_expression RP

    _while  shift, and go to state 333


state 273

  214 function_implementation: function_implementation expression .

    $default  reduce using rule 214 (function_implementation)


state 274

  215 function_implementation: function_implementation control_statement .

    $default  reduce using rule 215 (function_implementation)


state 275

  206 forin_statement: _for LP value_declare _in . primary_expression RP LC function_implementation RC

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 212
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get       go to state 67
    objc_method_call      go to state 68
    block_implementation  go to state 69
    object_value_type     go to state 70
    numerical_value_type  go to state 71
    primary_expression    go to state 334


state 276

  204 for_parameter_list: for_parameter_list SEMICOLON . expression

    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 335


state 277

  205 for_statement: _for LP for_parameter_list RP . LC function_implementation RC

    LC  shift, and go to state 336


state 278

  200 switch_statement: _switch LP primary_expression RP . LC

    LC  shift, and go to state 337


state 279

   54 value_declare_type: _typeof LP value_expression RP .

    $default  reduce using rule 54 (value_declare_type)


state 280

   15 class_declare: INTERFACE IDENTIFIER COLON IDENTIFIER .

    $default  reduce using rule 15 (class_declare)


state 281

   16 class_declare: INTERFACE IDENTIFIER LP IDENTIFIER . RP

    RP  shift, and go to state 338


state 282

   17 class_declare: INTERFACE IDENTIFIER LP RP .

    $default  reduce using rule 17 (class_declare)


state 283

   24 class_implementation: IMPLEMENTATION IDENTIFIER LP IDENTIFIER . RP

    RP  shift, and go to state 339


state 284

  130 primary_expression: PROTOCOL LP IDENTIFIER RP .

    $default  reduce using rule 130 (primary_expression)


state 285

  100 value_expression_list: value_expression_list COMMA . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 340


state 286

  125 object_value_type: IDENTIFIER LP value_expression_list RP .

    $default  reduce using rule 125 (object_value_type)


state 287

   50 declare_type: LT value_declare_type GT . declare_type

    LT        shift, and go to state 103
    ASTERISK  shift, and go to state 104

    $default  reduce using rule 49 (declare_type)

    declare_type  go to state 341


state 288

   87 block_type: value_declare_type LP POWER . RP

    RP  shift, and go to state 320


state 289

  134 primary_expression: LP value_declare_type RP primary_expression .

    $default  reduce using rule 134 (primary_expression)


state 290

  110 objc_method_call_pramameters: IDENTIFIER COLON . value_expression_list

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    IDENTIFIER  [reduce using rule 98 (value_expression_list)]
    $default    reduce using rule 98 (value_expression_list)

    value_expression_list  go to state 342
    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 220


state 291

  111 objc_method_call_pramameters: objc_method_call_pramameters IDENTIFIER . COLON value_expression_list

    COLON  shift, and go to state 343


state 292

  113 objc_method_call: LB method_caller_type objc_method_call_pramameters RB .

    $default  reduce using rule 113 (objc_method_call)


state 293

  121 object_value_type: AT LP value_expression RP .

    $default  reduce using rule 121 (object_value_type)


state 294

   13 includeHeader: includeHeader LT IDENTIFIER . DIV IDENTIFIER DOT IDENTIFIER GT

    DIV  shift, and go to state 344


state 295

   93 func_declare_parameters: func_declare_parameters COMMA . block_parametere_type

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare           go to state 234
    value_declare_type      go to state 235
    declare_left_attribute  go to state 64
    block_declare           go to state 65
    block_type              go to state 66
    block_parametere_type   go to state 345


state 296

  117 block_implementation: POWER LP func_declare_parameters RP . LC function_implementation RC

    LC  shift, and go to state 346


state 297

  116 block_implementation: POWER LC function_implementation RC .

    $default  reduce using rule 116 (block_implementation)


state 298

   93 func_declare_parameters: func_declare_parameters . COMMA block_parametere_type
  115 block_implementation: POWER value_declare_type LP func_declare_parameters . RP LC function_implementation RC

    COMMA  shift, and go to state 295
    RP     shift, and go to state 347


state 299

  114 block_implementation: POWER value_declare_type LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 348
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 300

   34 class_property_type: WEAK .

    $default  reduce using rule 34 (class_property_type)


state 301

   35 class_property_type: STRONG .

    $default  reduce using rule 35 (class_property_type)


state 302

   36 class_property_type: COPY .

    $default  reduce using rule 36 (class_property_type)


state 303

   33 class_property_type: ASSIGN_MEM .

    $default  reduce using rule 33 (class_property_type)


state 304

   37 class_property_type: NONATOMIC .

    $default  reduce using rule 37 (class_property_type)


state 305

   38 class_property_type: ATOMIC .

    $default  reduce using rule 38 (class_property_type)


state 306

   39 class_property_type: READONLY .

    $default  reduce using rule 39 (class_property_type)


state 307

   40 class_property_type: READWRITE .

    $default  reduce using rule 40 (class_property_type)


state 308

   41 class_property_type: NONNULL .
   77 declare_left_attribute: NONNULL .

    COMMA     reduce using rule 41 (class_property_type)
    RP        reduce using rule 41 (class_property_type)
    $default  reduce using rule 77 (declare_left_attribute)


state 309

   42 class_property_type: NULLABLE .
   78 declare_left_attribute: NULLABLE .

    COMMA     reduce using rule 42 (class_property_type)
    RP        reduce using rule 42 (class_property_type)
    $default  reduce using rule 78 (declare_left_attribute)


state 310

   45 class_property_declare: class_property_declare class_property_type . COMMA
   46                       | class_property_declare class_property_type . RP

    COMMA  shift, and go to state 349
    RP     shift, and go to state 350


state 311

   20 class_declare: class_declare PROPERTY class_property_declare value_declare . SEMICOLON

    SEMICOLON  shift, and go to state 351


state 312

   29 protocol_list: protocol_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 352


state 313

   18 class_declare: class_declare LT protocol_list GT .

    $default  reduce using rule 18 (class_declare)


state 314

   87 block_type: value_declare_type . LP POWER RP
   94 method_declare: SUB LP value_declare_type . RP

    LP  shift, and go to state 226
    RP  shift, and go to state 353


state 315

   87 block_type: value_declare_type . LP POWER RP
   95 method_declare: ADD LP value_declare_type . RP

    LP  shift, and go to state 226
    RP  shift, and go to state 354


state 316

   31 class_private_varibale_declare: class_private_varibale_declare value_declare SEMICOLON .

    $default  reduce using rule 31 (class_private_varibale_declare)


state 317

   97 method_declare: method_declare IDENTIFIER COLON . LP value_declare_type RP IDENTIFIER

    LP  shift, and go to state 355


state 318

   26 class_implementation: class_implementation method_declare LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 356
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 319

   85 block_declare: value_declare_type LP POWER IDENTIFIER . RP

    RP  shift, and go to state 357


state 320

   87 block_type: value_declare_type LP POWER RP .

    $default  reduce using rule 87 (block_type)


state 321

   86 block_declare: block_declare LP func_declare_parameters RP .

    $default  reduce using rule 86 (block_declare)


state 322

   88 block_type: block_type LP func_declare_parameters RP .

    $default  reduce using rule 88 (block_type)


state 323

  106 objc_method_get: objc_method_get value_get_operator IDENTIFIER LP . value_expression_list RP

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    $default  reduce using rule 98 (value_expression_list)

    value_expression_list  go to state 358
    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 220


state 324

  104 objc_method_get: object_value_type value_get_operator IDENTIFIER LP . value_expression_list RP

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    $default  reduce using rule 98 (value_expression_list)

    value_expression_list  go to state 359
    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 220


state 325

  161 ternary_expression: judgement_expression QUESTION COLON value_expression .
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    EQ          [reduce using rule 161 (ternary_expression)]
    NE          [reduce using rule 161 (ternary_expression)]
    LT          [reduce using rule 161 (ternary_expression)]
    LE          [reduce using rule 161 (ternary_expression)]
    GT          [reduce using rule 161 (ternary_expression)]
    GE          [reduce using rule 161 (ternary_expression)]
    LOGIC_AND   [reduce using rule 161 (ternary_expression)]
    LOGIC_OR    [reduce using rule 161 (ternary_expression)]
    AND         [reduce using rule 161 (ternary_expression)]
    OR          [reduce using rule 161 (ternary_expression)]
    POWER       [reduce using rule 161 (ternary_expression)]
    SUB         [reduce using rule 161 (ternary_expression)]
    ADD         [reduce using rule 161 (ternary_expression)]
    DIV         [reduce using rule 161 (ternary_expression)]
    ASTERISK    [reduce using rule 161 (ternary_expression)]
    INCREMENT   [reduce using rule 161 (ternary_expression)]
    DECREMENT   [reduce using rule 161 (ternary_expression)]
    SHIFTLEFT   [reduce using rule 161 (ternary_expression)]
    SHIFTRIGHT  [reduce using rule 161 (ternary_expression)]
    MOD         [reduce using rule 161 (ternary_expression)]
    $default    reduce using rule 161 (ternary_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 326

  160 ternary_expression: judgement_expression QUESTION ternary_expression value_expression . COLON value_expression
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    COLON       shift, and go to state 360
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 327

  193 if_statement: if_statement _else IF LP . value_expression RP LC function_implementation RC

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 361


state 328

  194 if_statement: if_statement _else LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 362
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 329

  197 case_statement: _case primary_expression COLON .

    $default  reduce using rule 197 (case_statement)


state 330

  199 case_statement: case_statement LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 363
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 331

  192 if_statement: IF LP value_expression RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 364


state 332

  196 while_statement: _while LP value_expression RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 365


state 333

  195 dowhile_statement: _do LC function_implementation RC _while . LP value_expression RP

    LP  shift, and go to state 366


state 334

  206 forin_statement: _for LP value_declare _in primary_expression . RP LC function_implementation RC

    RP  shift, and go to state 367


state 335

  204 for_parameter_list: for_parameter_list SEMICOLON expression .

    $default  reduce using rule 204 (for_parameter_list)


state 336

  205 for_statement: _for LP for_parameter_list RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 368


state 337

  200 switch_statement: _switch LP primary_expression RP LC .

    $default  reduce using rule 200 (switch_statement)


state 338

   16 class_declare: INTERFACE IDENTIFIER LP IDENTIFIER RP .

    $default  reduce using rule 16 (class_declare)


state 339

   24 class_implementation: IMPLEMENTATION IDENTIFIER LP IDENTIFIER RP .

    $default  reduce using rule 24 (class_implementation)


state 340

  100 value_expression_list: value_expression_list COMMA value_expression .
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    $default  reduce using rule 100 (value_expression_list)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 341

   50 declare_type: LT value_declare_type GT declare_type .
   52             | declare_type . declare_right_attribute

    CONST      shift, and go to state 222
    _NONNULL   shift, and go to state 223
    _NULLABLE  shift, and go to state 224

    CONST      [reduce using rule 50 (declare_type)]
    _NONNULL   [reduce using rule 50 (declare_type)]
    _NULLABLE  [reduce using rule 50 (declare_type)]
    $default   reduce using rule 50 (declare_type)

    declare_right_attribute  go to state 225


state 342

  100 value_expression_list: value_expression_list . COMMA value_expression
  110 objc_method_call_pramameters: IDENTIFIER COLON value_expression_list .

    COMMA  shift, and go to state 285

    $default  reduce using rule 110 (objc_method_call_pramameters)


state 343

  111 objc_method_call_pramameters: objc_method_call_pramameters IDENTIFIER COLON . value_expression_list

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    IDENTIFIER  [reduce using rule 98 (value_expression_list)]
    $default    reduce using rule 98 (value_expression_list)

    value_expression_list  go to state 369
    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 220


state 344

   13 includeHeader: includeHeader LT IDENTIFIER DIV . IDENTIFIER DOT IDENTIFIER GT

    IDENTIFIER  shift, and go to state 370


state 345

   93 func_declare_parameters: func_declare_parameters COMMA block_parametere_type .

    $default  reduce using rule 93 (func_declare_parameters)


state 346

  117 block_implementation: POWER LP func_declare_parameters RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 371


state 347

  115 block_implementation: POWER value_declare_type LP func_declare_parameters RP . LC function_implementation RC

    LC  shift, and go to state 372


state 348

  114 block_implementation: POWER value_declare_type LC function_implementation RC .

    $default  reduce using rule 114 (block_implementation)


state 349

   45 class_property_declare: class_property_declare class_property_type COMMA .

    $default  reduce using rule 45 (class_property_declare)


state 350

   46 class_property_declare: class_property_declare class_property_type RP .

    $default  reduce using rule 46 (class_property_declare)


state 351

   20 class_declare: class_declare PROPERTY class_property_declare value_declare SEMICOLON .

    $default  reduce using rule 20 (class_declare)


state 352

   29 protocol_list: protocol_list COMMA IDENTIFIER .

    $default  reduce using rule 29 (protocol_list)


state 353

   94 method_declare: SUB LP value_declare_type RP .

    $default  reduce using rule 94 (method_declare)


state 354

   95 method_declare: ADD LP value_declare_type RP .

    $default  reduce using rule 95 (method_declare)


state 355

   97 method_declare: method_declare IDENTIFIER COLON LP . value_declare_type RP IDENTIFIER

    _typeof        shift, and go to state 10
    NONNULL        shift, and go to state 14
    NULLABLE       shift, and go to state 15
    EXTERN         shift, and go to state 16
    STATIC         shift, and go to state 17
    CONST          shift, and go to state 18
    _STRONG        shift, and go to state 19
    _WEAK          shift, and go to state 20
    _BLOCK         shift, and go to state 21
    IDENTIFIER     shift, and go to state 119
    _Class         shift, and go to state 36
    _id            shift, and go to state 37
    _void          shift, and go to state 38
    _BOOL          shift, and go to state 39
    _CHAR          shift, and go to state 40
    _SHORT         shift, and go to state 41
    _INT           shift, and go to state 42
    _LONG          shift, and go to state 43
    _LLONG         shift, and go to state 44
    _UCHAR         shift, and go to state 45
    _USHORT        shift, and go to state 46
    _UINT          shift, and go to state 47
    _ULONG         shift, and go to state 48
    _ULLONG        shift, and go to state 49
    _DOUBLE        shift, and go to state 50
    _FLOAT         shift, and go to state 51
    _instancetype  shift, and go to state 52

    value_declare_type      go to state 373
    declare_left_attribute  go to state 64
    block_type              go to state 66


state 356

   26 class_implementation: class_implementation method_declare LC function_implementation RC .

    $default  reduce using rule 26 (class_implementation)


state 357

   85 block_declare: value_declare_type LP POWER IDENTIFIER RP .

    $default  reduce using rule 85 (block_declare)


state 358

  100 value_expression_list: value_expression_list . COMMA value_expression
  106 objc_method_get: objc_method_get value_get_operator IDENTIFIER LP value_expression_list . RP

    COMMA  shift, and go to state 285
    RP     shift, and go to state 374


state 359

  100 value_expression_list: value_expression_list . COMMA value_expression
  104 objc_method_get: object_value_type value_get_operator IDENTIFIER LP value_expression_list . RP

    COMMA  shift, and go to state 285
    RP     shift, and go to state 375


state 360

  160 ternary_expression: judgement_expression QUESTION ternary_expression value_expression COLON . value_expression

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 376


state 361

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  193 if_statement: if_statement _else IF LP value_expression . RP LC function_implementation RC

    RP          shift, and go to state 377
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 362

  194 if_statement: if_statement _else LC function_implementation RC .

    $default  reduce using rule 194 (if_statement)


state 363

  199 case_statement: case_statement LC function_implementation RC .

    $default  reduce using rule 199 (case_statement)


state 364

  192 if_statement: IF LP value_expression RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 378
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 365

  196 while_statement: _while LP value_expression RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 379
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 366

  195 dowhile_statement: _do LC function_implementation RC _while LP . value_expression RP

    PROTOCOL         shift, and go to state 13
    IDENTIFIER       shift, and go to state 90
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    objc_method_get        go to state 67
    objc_method_call       go to state 68
    block_implementation   go to state 69
    object_value_type      go to state 70
    numerical_value_type   go to state 71
    primary_expression     go to state 91
    ternary_expression     go to state 73
    calculator_expression  go to state 74
    judgement_expression   go to state 75
    value_expression       go to state 380


state 367

  206 forin_statement: _for LP value_declare _in primary_expression RP . LC function_implementation RC

    LC  shift, and go to state 381


state 368

  205 for_statement: _for LP for_parameter_list RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 382
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 369

  100 value_expression_list: value_expression_list . COMMA value_expression
  111 objc_method_call_pramameters: objc_method_call_pramameters IDENTIFIER COLON value_expression_list .

    COMMA  shift, and go to state 285

    $default  reduce using rule 111 (objc_method_call_pramameters)


state 370

   13 includeHeader: includeHeader LT IDENTIFIER DIV IDENTIFIER . DOT IDENTIFIER GT

    DOT  shift, and go to state 383


state 371

  117 block_implementation: POWER LP func_declare_parameters RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 384
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 372

  115 block_implementation: POWER value_declare_type LP func_declare_parameters RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 385


state 373

   87 block_type: value_declare_type . LP POWER RP
   97 method_declare: method_declare IDENTIFIER COLON LP value_declare_type . RP IDENTIFIER

    LP  shift, and go to state 226
    RP  shift, and go to state 386


state 374

  106 objc_method_get: objc_method_get value_get_operator IDENTIFIER LP value_expression_list RP .

    $default  reduce using rule 106 (objc_method_get)


state 375

  104 objc_method_get: object_value_type value_get_operator IDENTIFIER LP value_expression_list RP .

    $default  reduce using rule 104 (objc_method_get)


state 376

  160 ternary_expression: judgement_expression QUESTION ternary_expression value_expression COLON value_expression .
  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression

    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    EQ          [reduce using rule 160 (ternary_expression)]
    NE          [reduce using rule 160 (ternary_expression)]
    LT          [reduce using rule 160 (ternary_expression)]
    LE          [reduce using rule 160 (ternary_expression)]
    GT          [reduce using rule 160 (ternary_expression)]
    GE          [reduce using rule 160 (ternary_expression)]
    LOGIC_AND   [reduce using rule 160 (ternary_expression)]
    LOGIC_OR    [reduce using rule 160 (ternary_expression)]
    AND         [reduce using rule 160 (ternary_expression)]
    OR          [reduce using rule 160 (ternary_expression)]
    POWER       [reduce using rule 160 (ternary_expression)]
    SUB         [reduce using rule 160 (ternary_expression)]
    ADD         [reduce using rule 160 (ternary_expression)]
    DIV         [reduce using rule 160 (ternary_expression)]
    ASTERISK    [reduce using rule 160 (ternary_expression)]
    INCREMENT   [reduce using rule 160 (ternary_expression)]
    DECREMENT   [reduce using rule 160 (ternary_expression)]
    SHIFTLEFT   [reduce using rule 160 (ternary_expression)]
    SHIFTRIGHT  [reduce using rule 160 (ternary_expression)]
    MOD         [reduce using rule 160 (ternary_expression)]
    $default    reduce using rule 160 (ternary_expression)

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 377

  193 if_statement: if_statement _else IF LP value_expression RP . LC function_implementation RC

    LC  shift, and go to state 387


state 378

  192 if_statement: IF LP value_expression RP LC function_implementation RC .

    $default  reduce using rule 192 (if_statement)


state 379

  196 while_statement: _while LP value_expression RP LC function_implementation RC .

    $default  reduce using rule 196 (while_statement)


state 380

  162 calculator_expression: value_expression . binary_operator value_expression
  163                      | value_expression . unary_operator
  174 judgement_expression: value_expression . judgement_operator value_expression
  195 dowhile_statement: _do LC function_implementation RC _while LP value_expression . RP

    RP          shift, and go to state 388
    EQ          shift, and go to state 175
    NE          shift, and go to state 176
    LT          shift, and go to state 177
    LE          shift, and go to state 178
    GT          shift, and go to state 179
    GE          shift, and go to state 180
    LOGIC_AND   shift, and go to state 181
    LOGIC_OR    shift, and go to state 182
    AND         shift, and go to state 183
    OR          shift, and go to state 184
    POWER       shift, and go to state 185
    SUB         shift, and go to state 186
    ADD         shift, and go to state 187
    DIV         shift, and go to state 188
    ASTERISK    shift, and go to state 189
    INCREMENT   shift, and go to state 190
    DECREMENT   shift, and go to state 191
    SHIFTLEFT   shift, and go to state 192
    SHIFTRIGHT  shift, and go to state 193
    MOD         shift, and go to state 194

    unary_operator      go to state 195
    binary_operator     go to state 196
    judgement_operator  go to state 197


state 381

  206 forin_statement: _for LP value_declare _in primary_expression RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 389


state 382

  205 for_statement: _for LP for_parameter_list RP LC function_implementation RC .

    $default  reduce using rule 205 (for_statement)


state 383

   13 includeHeader: includeHeader LT IDENTIFIER DIV IDENTIFIER DOT . IDENTIFIER GT

    IDENTIFIER  shift, and go to state 390


state 384

  117 block_implementation: POWER LP func_declare_parameters RP LC function_implementation RC .

    $default  reduce using rule 117 (block_implementation)


state 385

  115 block_implementation: POWER value_declare_type LP func_declare_parameters RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 391
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 386

   97 method_declare: method_declare IDENTIFIER COLON LP value_declare_type RP . IDENTIFIER

    IDENTIFIER  shift, and go to state 392


state 387

  193 if_statement: if_statement _else IF LP value_expression RP LC . function_implementation RC

    $default  reduce using rule 213 (function_implementation)

    function_implementation  go to state 393


state 388

  195 dowhile_statement: _do LC function_implementation RC _while LP value_expression RP .

    $default  reduce using rule 195 (dowhile_statement)


state 389

  206 forin_statement: _for LP value_declare _in primary_expression RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 394
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 390

   13 includeHeader: includeHeader LT IDENTIFIER DIV IDENTIFIER DOT IDENTIFIER . GT

    GT  shift, and go to state 395


state 391

  115 block_implementation: POWER value_declare_type LP func_declare_parameters RP LC function_implementation RC .

    $default  reduce using rule 115 (block_implementation)


state 392

   97 method_declare: method_declare IDENTIFIER COLON LP value_declare_type RP IDENTIFIER .

    $default  reduce using rule 97 (method_declare)


state 393

  193 if_statement: if_statement _else IF LP value_expression RP LC function_implementation . RC
  214 function_implementation: function_implementation . expression
  215                        | function_implementation . control_statement

    IF               shift, and go to state 1
    _return          shift, and go to state 2
    _break           shift, and go to state 3
    _continue        shift, and go to state 4
    _goto            shift, and go to state 5
    _while           shift, and go to state 6
    _do              shift, and go to state 7
    _for             shift, and go to state 8
    _switch          shift, and go to state 9
    _typeof          shift, and go to state 10
    PROTOCOL         shift, and go to state 13
    NONNULL          shift, and go to state 14
    NULLABLE         shift, and go to state 15
    EXTERN           shift, and go to state 16
    STATIC           shift, and go to state 17
    CONST            shift, and go to state 18
    _STRONG          shift, and go to state 19
    _WEAK            shift, and go to state 20
    _BLOCK           shift, and go to state 21
    IDENTIFIER       shift, and go to state 22
    STRING_LITERAL   shift, and go to state 23
    LP               shift, and go to state 24
    LB               shift, and go to state 25
    RC               shift, and go to state 396
    AT               shift, and go to state 26
    LOGIC_NOT        shift, and go to state 28
    AND              shift, and go to state 29
    POWER            shift, and go to state 30
    ASTERISK         shift, and go to state 31
    _self            shift, and go to state 32
    _super           shift, and go to state 33
    _nil             shift, and go to state 34
    _NULL            shift, and go to state 35
    _Class           shift, and go to state 36
    _id              shift, and go to state 37
    _void            shift, and go to state 38
    _BOOL            shift, and go to state 39
    _CHAR            shift, and go to state 40
    _SHORT           shift, and go to state 41
    _INT             shift, and go to state 42
    _LONG            shift, and go to state 43
    _LLONG           shift, and go to state 44
    _UCHAR           shift, and go to state 45
    _USHORT          shift, and go to state 46
    _UINT            shift, and go to state 47
    _ULONG           shift, and go to state 48
    _ULLONG          shift, and go to state 49
    _DOUBLE          shift, and go to state 50
    _FLOAT           shift, and go to state 51
    _instancetype    shift, and go to state 52
    INTETER_LITERAL  shift, and go to state 53
    DOUBLE_LITERAL   shift, and go to state 54
    SELECTOR         shift, and go to state 55

    value_declare              go to state 62
    value_declare_type         go to state 63
    declare_left_attribute     go to state 64
    block_declare              go to state 65
    block_type                 go to state 66
    objc_method_get            go to state 67
    objc_method_call           go to state 68
    block_implementation       go to state 69
    object_value_type          go to state 70
    numerical_value_type       go to state 71
    primary_expression         go to state 72
    ternary_expression         go to state 73
    calculator_expression      go to state 74
    judgement_expression       go to state 75
    value_expression           go to state 76
    control_expression         go to state 77
    assign_expression          go to state 78
    declare_assign_expression  go to state 79
    var_assign_expression      go to state 80
    expression                 go to state 273
    if_statement               go to state 82
    dowhile_statement          go to state 83
    while_statement            go to state 84
    switch_statement           go to state 85
    for_statement              go to state 86
    forin_statement            go to state 87
    control_statement          go to state 274


state 394

  206 forin_statement: _for LP value_declare _in primary_expression RP LC function_implementation RC .

    $default  reduce using rule 206 (forin_statement)


state 395

   13 includeHeader: includeHeader LT IDENTIFIER DIV IDENTIFIER DOT IDENTIFIER GT .

    $default  reduce using rule 13 (includeHeader)


state 396

  193 if_statement: if_statement _else IF LP value_expression RP LC function_implementation RC .

    $default  reduce using rule 193 (if_statement)
